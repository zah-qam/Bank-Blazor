@page "/transactions/transfer/{accountId:int}"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Överföring</h3>

<div class="card p-4">
    <p><strong>Från konto:</strong> @accountId</p>

    <div class="mb-3">
        <label for="toAccountId" class="form-label">Till konto-ID</label>
        <input type="number" class="form-control" id="toAccountId" @bind="toAccountId" />
    </div>

    <div class="mb-3">
        <label for="amount" class="form-label">Belopp</label>
        <input type="number" class="form-control" id="amount" @bind="amount" />
    </div>

    <button class="btn btn-primary" @onclick="MakeTransfer">Bekräfta överföring</button>

    @if (!string.IsNullOrEmpty(Message))
    {
        <div class="alert alert-info mt-3">@Message</div>
    }
</div>

@code {
    [Parameter]
    public int accountId { get; set; }

    private int toAccountId;
    private decimal amount;
    private string? Message;

    private async Task MakeTransfer()
    {
        var payload = new
        {
            FromAccountId = accountId,
            ToAccountId = toAccountId,
            Amount = amount
        };

        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7155/api/Transaction/transfer", payload);

            if (response.IsSuccessStatusCode)
            {
                Message = "Överföring genomförd!";
                StateHasChanged();
                await Task.Delay(3000);
                Navigation.NavigateTo($"/customer/1");
            }
            else
            {
                Message = "Något gick fel. Försök igen.";
            }
        }
        catch (Exception ex)
        {
            Message = $"Fel: {ex.Message}";
        }
    }
}

